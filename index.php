<?php
$token = getenv("TELEGRAM_BOT_TOKEN");
$openai_key = getenv("OPENAI_API_KEY");
$admin_chat_id = "672463437";

$data = json_decode(file_get_contents("php://input"), true);
$chat_id = $data["message"]["chat"]["id"] ?? null;
$text = trim($data["message"]["text"] ?? "");
$state_file = "states/$chat_id.json";
$session_file = "sessions/$chat_id.json";

if (!file_exists("states")) mkdir("states", 0777, true);
if (!file_exists("sessions")) mkdir("sessions", 0777, true);
$state = file_exists($state_file) ? json_decode(file_get_contents($state_file), true) : ["step" => "menu"];

file_put_contents("log.txt", date("Y-m-d H:i:s") . " | $chat_id | $text\n", FILE_APPEND);

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∫–Ω–æ–ø–æ–∫ ===
if (!empty($data["callback_query"])) {
    $cid = $data["callback_query"]["from"]["id"];
    $callback_data = $data["callback_query"]["data"];

    // –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if (strpos($callback_data, "reply_to_") === 0 && $cid == $admin_chat_id) {
        $target_id = str_replace("reply_to_", "", $callback_data);
        file_put_contents("last_user.txt", $target_id);
        sendMessage($cid, "‚úç –í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $target_id:");
        exit;
    }

    // –ó–∞–∫—Ä—ã—Ç—å –≤–æ–ø—Ä–æ—Å
    if (strpos($callback_data, "close_") === 0 && $cid == $admin_chat_id) {
        $target_id = str_replace("close_", "", $callback_data);
        sendMessage($target_id, "‚úÖ –í–∞—à –≤–æ–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.");
        sendMessage($cid, "‚úÖ –í–æ–ø—Ä–æ—Å –∑–∞–∫—Ä—ã—Ç.");
        exit;
    }

    exit;
}

// === –û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—Ä—É—á–Ω—É—é ===
if ($chat_id === $admin_chat_id && file_exists("last_user.txt")) {
    $target = trim(file_get_contents("last_user.txt"));
    sendMessage($target, "üì© –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n" . $text);
    sendMessage($chat_id, "‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.");
    unlink("last_user.txt");
    exit;
}

// === –ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
if ($text === "/start") {
    $state["step"] = "menu";
    file_put_contents($session_file, json_encode([]));
    sendMessage($chat_id, "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–≥–æ—Å—Ç–∏–Ω–∏—Ü—É –ú–µ–¥–æ–≤–∞—è* –≤ –°–æ—á–∏!\n\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ü–µ–Ω—ã –∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá", "Markdown");
    sendMenu($chat_id);
    file_put_contents($state_file, json_encode($state));
    exit;
}

if ($text === "/reset") {
    file_put_contents($session_file, json_encode([]));
    sendMessage($chat_id, "üí¨ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ —Å–±—Ä–æ—à–µ–Ω–∞.");
    sendMenu($chat_id);
    exit;
}

if ($text === "/help") {
    sendMessage($chat_id, "‚ÑπÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ:\n\nüìÖ *–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å* ‚Äì —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é\nüè∑ *–¶–µ–Ω—ã –∏ –Ω–æ–º–µ—Ä–∞* ‚Äì —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å\n‚ùì *–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å* ‚Äì –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å\n\n–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.", "Markdown");
    exit;
}

if (in_array(mb_strtolower($text), ["–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å", "–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä"])) {
    sendMessage($chat_id, "–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å.");
    sendMenu($chat_id);
    exit;
}

if ($state["step"] === "ask") {
    $state["step"] = "menu";
    file_put_contents($state_file, json_encode($state));
    $answer = getChatGPTAnswerWithContext($text, $openai_key, $chat_id);
    sendMessage($chat_id, "ü§ñ –û—Ç–≤–µ—Ç:\n" . $answer);
    sendMenu($chat_id);
    exit;
}

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é ===
switch (mb_strtolower($text)) {
    case "üìÖ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å":
        sendInlineButtons($chat_id, "üìÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ:", [[["text" => "–ü–µ—Ä–µ–π—Ç–∏ –∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é", "url" => "https://booking-medovaya.agast.ru"]]]);
        break;
    case "üè∑ —Ü–µ–Ω—ã –∏ –Ω–æ–º–µ—Ä–∞":
        sendPhoto($chat_id, "https://hotel-medovaya.ru/wp-content/uploads/2025/05/room1.jpg", "üåÖ –ù–æ–º–µ—Ä —Å –≤–∏–¥–æ–º –Ω–∞ –º–æ—Ä–µ\n–¶–µ–Ω–∞: –æ—Ç 4500‚ÇΩ/—Å—É—Ç–∫–∏\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://hotel-medovaya.ru/gostinichnye-nomera-v-adlere/");
        break;
    case "üìû –∫–æ–Ω—Ç–∞–∫—Ç—ã":
        sendMessage($chat_id, "üìç –ö–æ–Ω—Ç–∞–∫—Ç—ã:\nüìû *+7 (938) 494-41-41*\n‚úâÔ∏è info@hotel-medovaya.ru\nüåê [–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç](https://hotel-medovaya.ru/contacts/)", "Markdown");
        break;
    case "‚ÑπÔ∏è –æ –≥–æ—Å—Ç–∏–Ω–∏—Ü–µ":
        sendMessage($chat_id, "üè® –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –≥–æ—Å—Ç–∏–Ω–∏—Ü–µ: [–°–º–æ—Ç—Ä–µ—Ç—å](https://hotel-medovaya.ru/gostinitsa-v-adlere-2-2/)", "Markdown");
        break;
    case "‚ùì –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        $state["step"] = "ask";
        file_put_contents($state_file, json_encode($state));
        sendMessage($chat_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å:");
        break;
    default:
        sendMessage($chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:");
        sendMenu($chat_id);
        break;
}

file_put_contents($state_file, json_encode($state));

// === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===

function sendMessage($chat_id, $text, $parse_mode = null) {
    global $token;
    $payload = ["chat_id" => $chat_id, "text" => $text];
    if ($parse_mode) $payload["parse_mode"] = $parse_mode;
    $options = ["http" => ["method"  => "POST", "header"  => "Content-Type:application/json", "content" => json_encode($payload, JSON_UNESCAPED_UNICODE)]];
    file_get_contents("https://api.telegram.org/bot$token/sendMessage", false, stream_context_create($options));
}

function sendMenu($chat_id) {
    global $token;
    $keyboard = [
        "keyboard" => [
            [["text" => "üìÖ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å"], ["text" => "üè∑ –¶–µ–Ω—ã –∏ –Ω–æ–º–µ—Ä–∞"]],
            [["text" => "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"], ["text" => "‚ÑπÔ∏è –û –≥–æ—Å—Ç–∏–Ω–∏—Ü–µ"]],
            [["text" => "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"]]
        ],
        "resize_keyboard" => true,
        "one_time_keyboard" => false
    ];
    $payload = ["chat_id" => $chat_id, "text" => "üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", "reply_markup" => json_encode($keyboard, JSON_UNESCAPED_UNICODE)];
    $options = ["http" => ["method"  => "POST", "header"  => "Content-Type:application/json", "content" => json_encode($payload)]];
    file_get_contents("https://api.telegram.org/bot$token/sendMessage", false, stream_context_create($options));
}

function sendPhoto($chat_id, $photo_url, $caption = "") {
    global $token;
    $payload = ["chat_id" => $chat_id, "photo" => $photo_url, "caption" => $caption];
    $options = ["http" => ["method"  => "POST", "header"  => "Content-Type:application/json", "content" => json_encode($payload, JSON_UNESCAPED_UNICODE)]];
    file_get_contents("https://api.telegram.org/bot$token/sendPhoto", false, stream_context_create($options));
}

function sendInlineButtons($chat_id, $text, $buttons) {
    global $token;
    $keyboard = ["inline_keyboard" => $buttons];
    $payload = ["chat_id" => $chat_id, "text" => $text, "reply_markup" => json_encode($keyboard, JSON_UNESCAPED_UNICODE)];
    $options = ["http" => ["method"  => "POST", "header"  => "Content-Type:application/json", "content" => json_encode($payload)]];
    file_get_contents("https://api.telegram.org/bot$token/sendMessage", false, stream_context_create($options));
}

function getChatGPTAnswerWithContext($user_input, $apiKey, $chat_id) {
    global $session_file, $admin_chat_id;

    $context = file_exists($session_file) ? json_decode(file_get_contents($session_file), true) : [];
    $context[] = ["role" => "user", "content" => $user_input];

    $messages = array_merge([
        ["role" => "system", "content" => "–¢—ã ‚Äî –≤–µ–∂–ª–∏–≤—ã–π –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≥–æ—Å—Ç–∏–Ω–∏—Ü—ã \"–ú–µ–¥–æ–≤–∞—è\" –≤ –°–æ—á–∏. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É. –ï—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω ‚Äî –ø–µ—Ä–µ–¥–∞–π –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."]
    ], $context);

    $data = ["model" => "gpt-3.5-turbo", "messages" => $messages, "temperature" => 0.7];
    $options = ["http" => ["method" => "POST", "header" => "Content-Type: application/json\r\nAuthorization: Bearer $apiKey", "content" => json_encode($data)]];

    $response = file_get_contents("https://api.openai.com/v1/chat/completions", false, stream_context_create($options));
    $result = json_decode($response, true);
    $reply = $result["choices"][0]["message"]["content"] ?? "";

    // –ª–æ–≥–∏—Ä—É–µ–º
    file_put_contents("log.txt", "GPT: " . $reply . "\n", FILE_APPEND);

    if (mb_strlen(trim($reply)) < 10 || stripos($reply, "–Ω–µ –∑–Ω–∞—é") !== false || stripos($reply, "–Ω–µ –º–æ–≥—É –ø–æ–º–æ—á—å") !== false) {
        $keyboard = [
            "inline_keyboard" => [
                [
                    ["text" => "‚úç –û—Ç–≤–µ—Ç–∏—Ç—å", "callback_data" => "reply_to_$chat_id"],
                    ["text" => "‚úÖ –ó–∞–∫—Ä—ã—Ç—å", "callback_data" => "close_$chat_id"]
                ]
            ]
        ];
        sendInlineButtons($admin_chat_id, "‚ùóÔ∏è –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n\"$user_input\"\n\nüÜî $chat_id", $keyboard);
        return "‚è≥ –Ø –ø–µ—Ä–µ–¥–∞–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û–Ω —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.";
    }

    $context[] = ["role" => "assistant", "content" => $reply];
    file_put_contents($session_file, json_encode(array_slice($context, -10)));
    return $reply;
}
